{"mappings":"AACA,MAAMA,IAAMC,SAASC,cAAc,QAC7BC,OAASF,SAASG,iBAAiB,UACzC,IAEIC,WAFAC,aAAe,KAGfC,UAAW,EAGf,SAASC,mBAOL,IAAIC,EALiB,OAAjBH,cACAH,OAAOG,cAAcI,UAAUC,OAAO,WAK1C,GACAF,EAAQG,KAAKC,MAAMD,KAAKE,SAAWX,OAAOY,cACjCN,IAAUH,cAGnBH,OAAOM,GAAOC,UAAUM,IAAI,WAG5BV,aAAeG,CACnB,CAGA,MAAMQ,aAAehB,SAASC,cAAc,kBAE5Ce,aAAaC,iBAAiB,SAAS,KACjCX,UAEFF,WAAac,aAAY,KACvBX,kBAAA,GACC,KACHS,aAAaG,YAAc,kBAC3Bb,UAAW,IAGXc,cAAchB,YACO,OAAjBC,cACAH,OAAOG,cAAcI,UAAUC,OAAO,WAE1CM,aAAaG,YAAc,mBAC3Bb,UAAW,EACb,IAIFP,IAAIkB,iBAAiB,cAAc,KACjCG,cAAchB,YACO,OAAjBC,cACFH,OAAOG,cAAcI,UAAUC,OAAO,cAI1CX,IAAIkB,iBAAiB,cAAc,KAC5BX,WACHF,WAAac,aAAY,KACvBX,kBAAA,GACC,SAKPH,WAAac,aAAY,KACvBX,kBAAA,GACC","sources":["src/js/about-me.js"],"sourcesContent":["// Get all the images with the class \"photo\"\r\nconst row = document.querySelector('.row');\r\nconst images = document.querySelectorAll('.photo');\r\nlet focusedIndex = null;\r\n\r\nlet intervalId;\r\nlet isPaused = false;\r\n\r\n// function to select and focus a random image\r\nfunction focusRandomImage() {\r\n    // If there is a currently focused image, remove the \"focused\" class\r\n    if (focusedIndex !== null) {\r\n        images[focusedIndex].classList.remove('focused');\r\n    }\r\n        \r\n    // Generate a random index between 0 and the length of the images array, excluding the previously focused index\r\n    let index;\r\n    do {\r\n    index = Math.floor(Math.random() * images.length);\r\n    } while (index === focusedIndex);\r\n    \r\n    // Apply the \"focused\" class to the image at the random index\r\n    images[index].classList.add('focused');\r\n    \r\n    // Set the focusedIndex to the new index\r\n    focusedIndex = index;\r\n}\r\n\r\n// event listener for the toggle button\r\nconst toggleButton = document.querySelector('#toggle-button');\r\n\r\ntoggleButton.addEventListener('click', () => {\r\n  if (isPaused) {\r\n    // resume the function\r\n    intervalId = setInterval(() => {\r\n      focusRandomImage();\r\n    }, 3000);\r\n    toggleButton.textContent = 'Pause Animation';\r\n    isPaused = false;\r\n  } else {\r\n    // pause the function\r\n    clearInterval(intervalId);\r\n    if (focusedIndex !== null) {\r\n        images[focusedIndex].classList.remove('focused');\r\n    }\r\n    toggleButton.textContent = 'Resume Animation';\r\n    isPaused = true;\r\n  }\r\n});\r\n\r\n// event listeners for the mouseenter and mouseleave events\r\nrow.addEventListener('mouseenter', () => {\r\n  clearInterval(intervalId);\r\n  if (focusedIndex !== null) {\r\n    images[focusedIndex].classList.remove('focused');\r\n}\r\n});\r\n\r\nrow.addEventListener('mouseleave', () => {\r\n  if (!isPaused) {\r\n    intervalId = setInterval(() => {\r\n      focusRandomImage();\r\n    }, 3000);\r\n  }\r\n});\r\n\r\n// initial call to start the function\r\nintervalId = setInterval(() => {\r\n  focusRandomImage();\r\n}, 3000);\r\n"],"names":["row","document","querySelector","images","querySelectorAll","intervalId","focusedIndex","isPaused","focusRandomImage","index","classList","remove","Math","floor","random","length","add","toggleButton","addEventListener","setInterval","textContent","clearInterval"],"version":3,"file":"about-me.bb530b53.js.map"}