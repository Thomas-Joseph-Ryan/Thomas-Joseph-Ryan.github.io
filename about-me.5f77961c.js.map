{"mappings":"AAAA,4CAA4C;AAC5C,MAAM,MAAM,SAAS,aAAa,CAAC;AACnC,MAAM,SAAS,SAAS,gBAAgB,CAAC;AACzC,IAAI,eAAe,IAAI;AAEvB,IAAI;AACJ,IAAI,WAAW,KAAK;AAEpB,8CAA8C;AAC9C,SAAS,mBAAmB;IACxB,oEAAoE;IACpE,IAAI,iBAAiB,IAAI,EACrB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;IAG1C,+GAA+G;IAC/G,IAAI;IACJ,GACA,QAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,MAAM;WACvC,UAAU,cAAc;IAEjC,6DAA6D;IAC7D,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IAE5B,wCAAwC;IACxC,eAAe;AACnB;AAEA,uCAAuC;AACvC,MAAM,eAAe,SAAS,aAAa,CAAC;AAE5C,aAAa,gBAAgB,CAAC,SAAS,IAAM;IAC3C,IAAI,UAAU;QACZ,sBAAsB;QACtB,aAAa,YAAY,IAAM;YAC7B;QACF,GAAG;QACH,aAAa,WAAW,GAAG;QAC3B,WAAW,KAAK;IAClB,OAAO;QACL,qBAAqB;QACrB,cAAc;QACd,IAAI,iBAAiB,IAAI,EACrB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;QAE1C,aAAa,WAAW,GAAG;QAC3B,WAAW,IAAI;IACjB,CAAC;AACH;AAEA,2DAA2D;AAC3D,IAAI,gBAAgB,CAAC,cAAc,IAAM;IACvC,cAAc;IACd,IAAI,iBAAiB,IAAI,EACvB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;AAE1C;AAEA,IAAI,gBAAgB,CAAC,cAAc,IAAM;IACvC,IAAI,CAAC,UACH,aAAa,YAAY,IAAM;QAC7B;IACF,GAAG;AAEP;AAEA,qCAAqC;AACrC,aAAa,YAAY,IAAM;IAC7B;AACF,GAAG","sources":["src/js/about-me.js"],"sourcesContent":["// Get all the images with the class \"photo\"\r\nconst row = document.querySelector('.row');\r\nconst images = document.querySelectorAll('.photo');\r\nlet focusedIndex = null;\r\n\r\nlet intervalId;\r\nlet isPaused = false;\r\n\r\n// function to select and focus a random image\r\nfunction focusRandomImage() {\r\n    // If there is a currently focused image, remove the \"focused\" class\r\n    if (focusedIndex !== null) {\r\n        images[focusedIndex].classList.remove('focused');\r\n    }\r\n        \r\n    // Generate a random index between 0 and the length of the images array, excluding the previously focused index\r\n    let index;\r\n    do {\r\n    index = Math.floor(Math.random() * images.length);\r\n    } while (index === focusedIndex);\r\n    \r\n    // Apply the \"focused\" class to the image at the random index\r\n    images[index].classList.add('focused');\r\n    \r\n    // Set the focusedIndex to the new index\r\n    focusedIndex = index;\r\n}\r\n\r\n// event listener for the toggle button\r\nconst toggleButton = document.querySelector('#toggle-button');\r\n\r\ntoggleButton.addEventListener('click', () => {\r\n  if (isPaused) {\r\n    // resume the function\r\n    intervalId = setInterval(() => {\r\n      focusRandomImage();\r\n    }, 3000);\r\n    toggleButton.textContent = 'Pause Animation';\r\n    isPaused = false;\r\n  } else {\r\n    // pause the function\r\n    clearInterval(intervalId);\r\n    if (focusedIndex !== null) {\r\n        images[focusedIndex].classList.remove('focused');\r\n    }\r\n    toggleButton.textContent = 'Resume Animation';\r\n    isPaused = true;\r\n  }\r\n});\r\n\r\n// event listeners for the mouseenter and mouseleave events\r\nrow.addEventListener('mouseenter', () => {\r\n  clearInterval(intervalId);\r\n  if (focusedIndex !== null) {\r\n    images[focusedIndex].classList.remove('focused');\r\n}\r\n});\r\n\r\nrow.addEventListener('mouseleave', () => {\r\n  if (!isPaused) {\r\n    intervalId = setInterval(() => {\r\n      focusRandomImage();\r\n    }, 3000);\r\n  }\r\n});\r\n\r\n// initial call to start the function\r\nintervalId = setInterval(() => {\r\n  focusRandomImage();\r\n}, 3000);\r\n"],"names":[],"version":3,"file":"about-me.5f77961c.js.map","sourceRoot":"/__parcel_source_root/"}